import { formatDistanceToNow } from 'date-fns';
import { CalendarClock } from 'lucide-react';

import type { JobTaskWithLead } from '../../types/job';
import Card, { CardContent } from '../common/Card';
import SectionHeader from '../common/SectionHeader';

interface NextAutomationsProps {
  tasks: JobTaskWithLead[];
}

const NextAutomations: React.FC<NextAutomationsProps> = ({ tasks }) => {
  return (
    <Card className="p-6">
      <div className="flex items-center justify-between">
        <SectionHeader icon={CalendarClock} title="Next Automations" />
        <span className="text-xs text-muted-foreground">Top 5 queued</span>
      </div>
      <CardContent className="space-y-3">
        {tasks.length ? (
          tasks.map((task) => (
            <div key={task.id} className="rounded-xl border border-border bg-background p-4 text-sm">
              <div className="flex items-center justify-between">
                <span className="font-semibold text-foreground">{task.title}</span>
                <span className="text-xs text-muted-foreground">
                  {formatDistanceToNow(new Date(task.dueDate), { addSuffix: true })}
                </span>
              </div>
              <div className="mt-2 flex flex-wrap items-center gap-2 text-xs text-muted-foreground">
                {task.job && <span className="rounded-full bg-muted px-2 py-0.5">{task.job.company}</span>}
                <span className="rounded-full bg-muted px-2 py-0.5">{task.category}</span>
                {task.autoGenerated && (
                  <span className="rounded-full bg-primary/10 px-2 py-0.5 text-primary">Automated</span>
                )}
              </div>
            </div>
          ))
        ) : (
          <div className="rounded-xl border border-dashed border-border bg-muted/40 p-6 text-center text-sm text-muted-foreground">
            Queue is clear. Add automation from any opportunity.
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default NextAutomations;
